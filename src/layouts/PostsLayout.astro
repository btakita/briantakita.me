---
import { type Post } from '@btakita/domain--all--blog'
import { page_number_a__new, sorted__posts__new } from '@btakita/domain--server--blog'
import { getCollection } from 'astro:content'
import { V_main_posts, V_nav_posts } from '@btakita/ui--server--blog'
import type { PlateVan } from 'van-type-delegate'
import Footer from '../components/Footer.astro'
import Header from '../components/Header.astro'
import Van from '../components/Van.astro'
import { SITE } from '../config'
import Layout from '../layouts/Layout.astro'
import { server__ctx__new } from '../lib'
const { slug } = Astro.params

const ctx = server__ctx__new(Astro)
const posts = sorted__posts__new(await getCollection('posts') as Post[])
const sorted__posts = sorted__posts__new(posts)
const page_numbers = page_number_a__new(ctx, sorted__posts.length)
const page_count = page_numbers.length
const total_pages = page_numbers.length
const page_num =
	slug && !isNaN(Number(slug)) && page_numbers.includes(Number(slug))
		? Number(slug)
		: 0
const last_post = page_num * SITE.page__post_count
const start_post = last_post - SITE.page__post_count
const sorted__paginated__posts = sorted__posts.slice(start_post, last_post)
---

<Layout title={`Posts | ${SITE.title}`}>
	<Header ctx={ctx} active="posts"/>
	<Van dom={V_main_posts<PlateVan>({ ctx, posts: sorted__paginated__posts })}/>
	<Van dom={
		V_nav_posts<PlateVan>({
			ctx,
			page_num,
			page_count,
		})
	}/>
	<Footer ctx={ctx}/>
</Layout>
