---
import { post__slug__new } from '@btakita/domain--all--blog'
import { footnote_o_, footnote_o__set, page_number_a__new } from '@btakita/domain--server--blog'
import { type CollectionEntry, getCollection } from 'astro:content'
import { type GetStaticPathsResult } from 'astro'
import PostLayout from '../../../layouts/PostLayout.astro'
import PostsLayout from '../../../layouts/PostsLayout.astro'
import { server__ctx__new } from '../../../lib'
export interface Props {
	post:CollectionEntry<'posts'>
}
export async function getStaticPaths():Promise<GetStaticPathsResult> {
	const ctx = server__ctx__new(Astro)
	const posts = await getCollection('posts')
	const post_result = posts.map(post=>({
		params: { slug: post__slug__new(post) },
		props: { post },
	}))
	const pagination_result = page_number_a__new(ctx, posts.length).map(pageNum=>({
		params: { slug: String(pageNum) },
	}))
	return [...post_result, ...pagination_result] as GetStaticPathsResult
}
const ctx = server__ctx__new(Astro)
const { slug } = Astro.params
const post = Astro.props.post as CollectionEntry<'posts'>
const {
	Content,
	remarkPluginFrontmatter
} = post ? await post.render() : {}
const frontmatter_ctx = remarkPluginFrontmatter?.ctx
if (frontmatter_ctx) {
	footnote_o__set(ctx, footnote_o_(frontmatter_ctx))
}
---

{post
	?
		<PostLayout ctx={ctx} post={post}>
			<Content ctx={ctx} post={post}/>
		</PostLayout>
	: <PostsLayout/>}
