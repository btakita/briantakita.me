---
import { type Post } from '@btakita/domain--all--blog'
import { sorted__posts__new, tag__posts__new, unique__tags__new } from '@btakita/domain--server--blog'
import { V_main_tag } from '@btakita/ui--server--blog'
import { CollectionEntry, getCollection } from 'astro:content'
import Footer from '../../../components/Footer.astro'
import Header from '../../../components/Header.astro'
import Rel from '../../../components/Rel.astro'
import { SITE } from '../../../config'
import Layout from '../../../layouts/Layout.astro'
import { server__ctx__new } from '../../../lib'
export interface Props {
	post:CollectionEntry<'posts'>
	tag:string
}
export async function getStaticPaths() {
	const posts = sorted__posts__new(await getCollection('posts') as Post[])
	const tags = unique__tags__new(posts)
	return tags.map(tag=>{
		return {
			params: { tag },
			props: { tag },
		}
	})
}
const ctx = server__ctx__new(Astro)
const { tag } = Astro.props
const posts = sorted__posts__new(await getCollection('posts') as Post[])
const tag__posts = tag__posts__new(posts, tag)
---

<Layout ctx={ctx} title={`Tag:${tag} | ${SITE.title}`}>
	<Header ctx={ctx} active="tags"/>
	<Rel dom={
		V_main_tag({ ctx, tag, posts: tag__posts })
	}/>
	<Footer ctx={ctx}/>
</Layout>
